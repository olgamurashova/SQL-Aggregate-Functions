1. Retrieving the table content:

SELECT *
FROM startups;

2. Calculating the total number of companies in the table:

SELECT COUNT(*)
FROM startups;

3. Calculating the total value of all companies in the table:

SELECT SUM(valuation)
FROM startups;

4. Calculating the highest amount raised by a startup:

SELECT MAX(raised)
FROM startups;

5. Returning the maximum amount of money raised, during ‘Seed’ stage:

SELECT MAX(raised)
FROM startups
WHERE stage = 'Seed';

6. Filtering the year the oldest company on the list was founded:

SELECT MIN(founded)
FROM startups;

7. Returning the average valuation:

SELECT AVG(valuation)
FROM startups;

8. Returning the average valuation, in each category:

SELECT category, AVG(valuation)
FROM startups
GROUP BY category;

9. Returning the average valuation, in each category and rounding the averages to two decimal places.

SELECT category, ROUND(AVG(valuation), 2)
FROM startups
GROUP BY category;

10. Returning the average valuation, in each category and rounding the averages to two decimal places, ordering the list from highest averages to lowest.

SELECT category, ROUND(AVG(valuation), 2)
FROM startups
GROUP BY 1
ORDER BY 2 DESC;

11. Returning the name of each category with the total number of companies that belong to it:

SELECT category, COUNT(*)
FROM startups
GROUP BY category;

12. Filtering the result to only include categories that have more than three companies in them:

SELECT category, COUNT(*)
FROM startups
GROUP BY category
Having COUNT(*) > 3;

SELECT category, COUNT(*)
FROM startups
GROUP BY category
HAVING COUNT(*) > 3
ORDER BY 2 DESC;

13. Returning average size of a startup in each location:

SELECT location,  AVG(employees)
FROM startups
GROUP BY location;

SELECT location,  AVG(employees)
FROM startups
GROUP BY 1
ORDER BY 2 DESC;

14. Returning the average size of a startup in each location, with average sizes above 500:

SELECT location, AVG(employees)
FROM startups
GROUP BY location
HAVING  AVG(employees) > 500;


